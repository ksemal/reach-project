{"ast":null,"code":"var _jsxFileName = \"/Users/ksuuushi/Bootcamp_UNC/reach-project/client/src/App.js\";\nimport React from \"react\";\nimport API from \"./utils/API\";\nimport Header from \"./Header\";\nimport HiddenWord from \"./HiddenWord\";\nimport Alphabet from \"./Alphabet\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addLetter = letter => {\n      console.log(this.state.guessedletters);\n      this.setState({\n        guessedletters: [...this.state.guessedletters, letter]\n      });\n    };\n\n    this.state = {\n      difficulty: 3,\n      guessedletters: []\n    };\n  }\n\n  componentDidMount() {\n    this.getWord(this.state.difficulty);\n  }\n\n  getWord(difficulty) {\n    API.getWords(difficulty).then(response => {\n      let oneWordArray = response.data.split(\"\");\n      this.setState({\n        word: oneWordArray\n      });\n    }).catch(function (error) {\n      console.log(error);\n    }).then(function () {// always executed\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), this.state.word ? React.createElement(HiddenWord, {\n      word: this.state.word,\n      guessedLetters: this.state.guessedletters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }) : \"\", React.createElement(Alphabet, {\n      onClick: this.addLetter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ksuuushi/Bootcamp_UNC/reach-project/client/src/App.js"],"names":["React","API","Header","HiddenWord","Alphabet","App","Component","constructor","props","addLetter","letter","console","log","state","guessedletters","setState","difficulty","componentDidMount","getWord","getWords","then","response","oneWordArray","data","split","word","catch","error","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA4BnBC,SA5BmB,GA4BPC,MAAM,IAAI;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,cAAvB;AACA,WAAKC,QAAL,CAAc;AAAED,QAAAA,cAAc,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,cAAf,EAA+BJ,MAA/B;AAAlB,OAAd;AACD,KA/BkB;;AAEjB,SAAKG,KAAL,GAAa;AACXG,MAAAA,UAAU,EAAE,CADD;AAEXF,MAAAA,cAAc,EAAE;AAFL,KAAb;AAID;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,CAAa,KAAKL,KAAL,CAAWG,UAAxB;AACD;;AAEDE,EAAAA,OAAO,CAACF,UAAD,EAAa;AAClBf,IAAAA,GAAG,CAACkB,QAAJ,CAAaH,UAAb,EACGI,IADH,CACQC,QAAQ,IAAI;AAChB,UAAIC,YAAY,GAAGD,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoB,EAApB,CAAnB;AACA,WAAKT,QAAL,CAAc;AACZU,QAAAA,IAAI,EAAEH;AADM,OAAd;AAGD,KANH,EAOGI,KAPH,CAOS,UAASC,KAAT,EAAgB;AACrBhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACD,KATH,EAUGP,IAVH,CAUQ,YAAW,CACf;AACD,KAZH;AAaD;;AAODQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEG,KAAKf,KAAL,CAAWY,IAAX,GACC,oBAAC,UAAD;AACE,MAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWY,IADnB;AAEE,MAAA,cAAc,EAAE,KAAKZ,KAAL,CAAWC,cAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAMC,EARJ,EAUE,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKL,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAcD;;AAjD+B;;AAoDlC,eAAeJ,GAAf","sourcesContent":["import React from \"react\";\nimport API from \"./utils/API\";\n\nimport Header from \"./Header\";\nimport HiddenWord from \"./HiddenWord\";\nimport Alphabet from \"./Alphabet\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      difficulty: 3,\n      guessedletters: []\n    };\n  }\n\n  componentDidMount() {\n    this.getWord(this.state.difficulty);\n  }\n\n  getWord(difficulty) {\n    API.getWords(difficulty)\n      .then(response => {\n        let oneWordArray = response.data.split(\"\");\n        this.setState({\n          word: oneWordArray\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      })\n      .then(function() {\n        // always executed\n      });\n  }\n\n  addLetter = letter => {\n    console.log(this.state.guessedletters);\n    this.setState({ guessedletters: [...this.state.guessedletters, letter] });\n  };\n\n  render() {\n    return (\n      <div>\n        <Header />\n        {this.state.word ? (\n          <HiddenWord\n            word={this.state.word}\n            guessedLetters={this.state.guessedletters}\n          />\n        ) : (\n          \"\"\n        )}\n        <Alphabet onClick={this.addLetter} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
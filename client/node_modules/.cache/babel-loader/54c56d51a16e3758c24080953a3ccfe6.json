{"ast":null,"code":"var _jsxFileName = \"/Users/ksuuushi/Bootcamp_UNC/reach-project/client/src/App.js\";\nimport React from \"react\";\nimport API from \"./utils/API\";\nimport Header from \"./Header\";\nimport HiddenWord from \"./HiddenWord\";\nimport Alphabet from \"./Alphabet\";\nimport ScoreBoard from \"./ScoreBoard\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkUserScore = letter => {\n      if (this.state.guessedletters.includes(letter)) return;\n      let incrementor = 0;\n      this.state.word.includes(letter) ? incrementor = 1 : incrementor = -1;\n      this.setState(prevState => {\n        return {\n          guesses: prevState.guesses + incrementor,\n          guessedletters: [...this.state.guessedletters, letter]\n        };\n      });\n    };\n\n    this.state = {\n      difficulty: 3,\n      guessedletters: [],\n      guesses: 6\n    };\n  }\n\n  componentDidMount() {\n    this.getWord(this.state.difficulty);\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.guesses);\n    if (this.state.guesses == 0) console.log(\"game over\");\n  }\n\n  getWord(difficulty) {\n    API.getWords(difficulty).then(response => {\n      let oneWordArray = response.data.split(\"\");\n      this.setState({\n        word: oneWordArray\n      });\n    }).catch(function (error) {\n      console.log(error);\n    }).then(function () {// always executed\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), this.state.word ? React.createElement(HiddenWord, {\n      word: this.state.word,\n      guessedLetters: this.state.guessedletters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }) : \"\", React.createElement(Alphabet, {\n      onClick: this.checkUserScore,\n      guessedLetters: this.state.guessedletters,\n      word: this.state.word,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(ScoreBoard, {\n      score: this.state.guesses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ksuuushi/Bootcamp_UNC/reach-project/client/src/App.js"],"names":["React","API","Header","HiddenWord","Alphabet","ScoreBoard","App","Component","constructor","props","checkUserScore","letter","state","guessedletters","includes","incrementor","word","setState","prevState","guesses","difficulty","componentDidMount","getWord","componentDidUpdate","console","log","getWords","then","response","oneWordArray","data","split","catch","error","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiCnBC,cAjCmB,GAiCFC,MAAM,IAAI;AACzB,UAAI,KAAKC,KAAL,CAAWC,cAAX,CAA0BC,QAA1B,CAAmCH,MAAnC,CAAJ,EAAgD;AAEhD,UAAII,WAAW,GAAG,CAAlB;AACA,WAAKH,KAAL,CAAWI,IAAX,CAAgBF,QAAhB,CAAyBH,MAAzB,IAAoCI,WAAW,GAAG,CAAlD,GAAwDA,WAAW,GAAG,CAAC,CAAvE;AACA,WAAKE,QAAL,CAAcC,SAAS,IAAI;AACzB,eAAO;AACLC,UAAAA,OAAO,EAAED,SAAS,CAACC,OAAV,GAAoBJ,WADxB;AAELF,UAAAA,cAAc,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,cAAf,EAA+BF,MAA/B;AAFX,SAAP;AAID,OALD;AAMD,KA5CkB;;AAEjB,SAAKC,KAAL,GAAa;AACXQ,MAAAA,UAAU,EAAE,CADD;AAEXP,MAAAA,cAAc,EAAE,EAFL;AAGXM,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,CAAa,KAAKV,KAAL,CAAWQ,UAAxB;AACD;;AACDG,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWO,OAAvB;AACA,QAAI,KAAKP,KAAL,CAAWO,OAAX,IAAsB,CAA1B,EAA6BK,OAAO,CAACC,GAAR,CAAY,WAAZ;AAC9B;;AAEDH,EAAAA,OAAO,CAACF,UAAD,EAAa;AAClBnB,IAAAA,GAAG,CAACyB,QAAJ,CAAaN,UAAb,EACGO,IADH,CACQC,QAAQ,IAAI;AAChB,UAAIC,YAAY,GAAGD,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoB,EAApB,CAAnB;AACA,WAAKd,QAAL,CAAc;AACZD,QAAAA,IAAI,EAAEa;AADM,OAAd;AAGD,KANH,EAOGG,KAPH,CAOS,UAASC,KAAT,EAAgB;AACrBT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD,KATH,EAUGN,IAVH,CAUQ,YAAW,CACf;AACD,KAZH;AAaD;;AAeDO,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEG,KAAKtB,KAAL,CAAWI,IAAX,GACC,oBAAC,UAAD;AACE,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI,IADnB;AAEE,MAAA,cAAc,EAAE,KAAKJ,KAAL,CAAWC,cAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAMC,EARJ,EAUE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE,KAAKH,cADhB;AAEE,MAAA,cAAc,EAAE,KAAKE,KAAL,CAAWC,cAF7B;AAGE,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWI,IAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAeE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWO,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CADF;AAmBD;;AAnE+B;;AAsElC,eAAeb,GAAf","sourcesContent":["import React from \"react\";\nimport API from \"./utils/API\";\n\nimport Header from \"./Header\";\nimport HiddenWord from \"./HiddenWord\";\nimport Alphabet from \"./Alphabet\";\nimport ScoreBoard from \"./ScoreBoard\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      difficulty: 3,\n      guessedletters: [],\n      guesses: 6\n    };\n  }\n\n  componentDidMount() {\n    this.getWord(this.state.difficulty);\n  }\n  componentDidUpdate() {\n    console.log(this.state.guesses);\n    if (this.state.guesses == 0) console.log(\"game over\");\n  }\n\n  getWord(difficulty) {\n    API.getWords(difficulty)\n      .then(response => {\n        let oneWordArray = response.data.split(\"\");\n        this.setState({\n          word: oneWordArray\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      })\n      .then(function() {\n        // always executed\n      });\n  }\n\n  checkUserScore = letter => {\n    if (this.state.guessedletters.includes(letter)) return;\n\n    let incrementor = 0;\n    this.state.word.includes(letter) ? (incrementor = 1) : (incrementor = -1);\n    this.setState(prevState => {\n      return {\n        guesses: prevState.guesses + incrementor,\n        guessedletters: [...this.state.guessedletters, letter]\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Header />\n        {this.state.word ? (\n          <HiddenWord\n            word={this.state.word}\n            guessedLetters={this.state.guessedletters}\n          />\n        ) : (\n          \"\"\n        )}\n        <Alphabet\n          onClick={this.checkUserScore}\n          guessedLetters={this.state.guessedletters}\n          word={this.state.word}\n        />\n        <ScoreBoard score={this.state.guesses} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
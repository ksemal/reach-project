{"ast":null,"code":"var _jsxFileName = \"/Users/ksuuushi/Bootcamp_UNC/reach-project/client/src/HiddenWord.js\";\nimport React from \"react\";\n\nconst HiddenWord = props => {\n  console.log(props);\n  return React.createElement(\"ul\", {\n    className: \"horizontal-ul word\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, props.word.map((letter, i) => {\n    if (props.endGame === \"win\") {\n      return React.createElement(\"li\", {\n        className: \"hidden-word-\" + props.endGame,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, letter);\n    } else if (props.endGame === \"lose\") {\n      return React.createElement(\"li\", {\n        className: \"hidden-word-\" + props.endGame,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, letter);\n    } else {\n      if (props.guessedLetters.includes(letter)) {\n        return React.createElement(\"li\", {\n          className: \"hidden-word\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, letter);\n      } else if (!letter) {\n        return React.createElement(\"li\", {\n          className: \"space\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \" \");\n      } else {\n        React.createElement(\"li\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"_\");\n      } // return props.guessedLetters.includes(letter) ? (\n      //   <li className=\"hidden-word\" key={i}>\n      //     {letter}\n      //   </li>\n      // ) : (\n      //   <li key={i}>_</li>\n      // );\n\n    }\n  }));\n};\n\nexport default HiddenWord;","map":{"version":3,"sources":["/Users/ksuuushi/Bootcamp_UNC/reach-project/client/src/HiddenWord.js"],"names":["React","HiddenWord","props","console","log","word","map","letter","i","endGame","guessedLetters","includes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAe,CAACC,MAAD,EAASC,CAAT,KAAe;AAC7B,QAAIN,KAAK,CAACO,OAAN,KAAkB,KAAtB,EAA6B;AAC3B,aACE;AAAI,QAAA,SAAS,EAAE,iBAAiBP,KAAK,CAACO,OAAtC;AAA+C,QAAA,GAAG,EAAED,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,MADH,CADF;AAKD,KAND,MAMO,IAAIL,KAAK,CAACO,OAAN,KAAkB,MAAtB,EAA8B;AACnC,aACE;AAAI,QAAA,SAAS,EAAE,iBAAiBP,KAAK,CAACO,OAAtC;AAA+C,QAAA,GAAG,EAAED,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,MADH,CADF;AAKD,KANM,MAMA;AACL,UAAIL,KAAK,CAACQ,cAAN,CAAqBC,QAArB,CAA8BJ,MAA9B,CAAJ,EAA2C;AACzC,eACE;AAAI,UAAA,SAAS,EAAC,aAAd;AAA4B,UAAA,GAAG,EAAEC,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,MADH,CADF;AAKD,OAND,MAMO,IAAI,CAACA,MAAL,EAAa;AAClB,eAAO;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,OAFM,MAEA;AACL;AAAI,UAAA,GAAG,EAAEC,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,OAXI,CAYL;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AACF,GAjCA,CADH,CADF;AAsCD,CAxCD;;AA0CA,eAAeP,UAAf","sourcesContent":["import React from \"react\";\n\nconst HiddenWord = props => {\n  console.log(props);\n  return (\n    <ul className=\"horizontal-ul word\">\n      {props.word.map((letter, i) => {\n        if (props.endGame === \"win\") {\n          return (\n            <li className={\"hidden-word-\" + props.endGame} key={i}>\n              {letter}\n            </li>\n          );\n        } else if (props.endGame === \"lose\") {\n          return (\n            <li className={\"hidden-word-\" + props.endGame} key={i}>\n              {letter}\n            </li>\n          );\n        } else {\n          if (props.guessedLetters.includes(letter)) {\n            return (\n              <li className=\"hidden-word\" key={i}>\n                {letter}\n              </li>\n            );\n          } else if (!letter) {\n            return <li className=\"space\"> </li>;\n          } else {\n            <li key={i}>_</li>;\n          }\n          // return props.guessedLetters.includes(letter) ? (\n          //   <li className=\"hidden-word\" key={i}>\n          //     {letter}\n          //   </li>\n          // ) : (\n          //   <li key={i}>_</li>\n          // );\n        }\n      })}\n    </ul>\n  );\n};\n\nexport default HiddenWord;\n"]},"metadata":{},"sourceType":"module"}
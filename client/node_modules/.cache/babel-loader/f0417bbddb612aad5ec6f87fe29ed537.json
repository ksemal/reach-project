{"ast":null,"code":"var _jsxFileName = \"/Users/ksuuushi/Bootcamp_UNC/reach-project/client/src/Alphabet.js\";\nimport React from \"react\";\nconst alphabetArray = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"];\n\nconst Alphabet = props => {\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: \"horizontal-ul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, alphabetArray.map((letter, i) => {\n    return React.createElement(\"li\", {\n      className: \"letter \" + (props.guessedLetters.includes(letter) && props.word.includes(letter) ? \"correct\" : \"\") + (props.guessedLetters.includes(letter) && !props.word.includes(letter) ? \"wrong\" : \"\"),\n      key: i,\n      onClick: () => props.onClick(letter),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, letter);\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, props.error));\n};\n\nexport default Alphabet;","map":{"version":3,"sources":["/Users/ksuuushi/Bootcamp_UNC/reach-project/client/src/Alphabet.js"],"names":["React","alphabetArray","Alphabet","props","map","letter","i","guessedLetters","includes","word","onClick","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAG,CACpB,GADoB,EAEpB,GAFoB,EAGpB,GAHoB,EAIpB,GAJoB,EAKpB,GALoB,EAMpB,GANoB,EAOpB,GAPoB,EAQpB,GARoB,EASpB,GAToB,EAUpB,GAVoB,EAWpB,GAXoB,EAYpB,GAZoB,EAapB,GAboB,EAcpB,GAdoB,EAepB,GAfoB,EAgBpB,GAhBoB,EAiBpB,GAjBoB,EAkBpB,GAlBoB,EAmBpB,GAnBoB,EAoBpB,GApBoB,EAqBpB,GArBoB,EAsBpB,GAtBoB,EAuBpB,GAvBoB,EAwBpB,GAxBoB,EAyBpB,GAzBoB,EA0BpB,GA1BoB,EA2BpB,GA3BoB,EA4BpB,GA5BoB,EA6BpB,GA7BoB,EA8BpB,GA9BoB,EA+BpB,GA/BoB,EAgCpB,GAhCoB,EAiCpB,GAjCoB,EAkCpB,GAlCoB,EAmCpB,GAnCoB,EAoCpB,GApCoB,CAAtB;;AAsCA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,SACE,0CACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,aAAa,CAACG,GAAd,CAAkB,CAACC,MAAD,EAASC,CAAT,KAAe;AAChC,WACE;AACE,MAAA,SAAS,EACP,aACCH,KAAK,CAACI,cAAN,CAAqBC,QAArB,CAA8BH,MAA9B,KACDF,KAAK,CAACM,IAAN,CAAWD,QAAX,CAAoBH,MAApB,CADC,GAEG,SAFH,GAGG,EAJJ,KAKCF,KAAK,CAACI,cAAN,CAAqBC,QAArB,CAA8BH,MAA9B,KACD,CAACF,KAAK,CAACM,IAAN,CAAWD,QAAX,CAAoBH,MAApB,CADA,GAEG,OAFH,GAGG,EARJ,CAFJ;AAYE,MAAA,GAAG,EAAEC,CAZP;AAaE,MAAA,OAAO,EAAE,MAAMH,KAAK,CAACO,OAAN,CAAcL,MAAd,CAbjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeGA,MAfH,CADF;AAmBD,GApBA,CADH,CADF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACQ,KAAV,CAxBF,CADF;AA4BD,CA7BD;;AA+BA,eAAeT,QAAf","sourcesContent":["import React from \"react\";\n\nconst alphabetArray = [\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"0\"\n];\nconst Alphabet = props => {\n  return (\n    <>\n      <ul className=\"horizontal-ul\">\n        {alphabetArray.map((letter, i) => {\n          return (\n            <li\n              className={\n                \"letter \" +\n                (props.guessedLetters.includes(letter) &&\n                props.word.includes(letter)\n                  ? \"correct\"\n                  : \"\") +\n                (props.guessedLetters.includes(letter) &&\n                !props.word.includes(letter)\n                  ? \"wrong\"\n                  : \"\")\n              }\n              key={i}\n              onClick={() => props.onClick(letter)}\n            >\n              {letter}\n            </li>\n          );\n        })}\n      </ul>\n      <p>{props.error}</p>\n    </>\n  );\n};\n\nexport default Alphabet;\n"]},"metadata":{},"sourceType":"module"}